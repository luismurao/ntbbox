% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cov_center.R
\name{cov_center}
\alias{cov_center}
\title{Function to compute the Minimum Volume covariance Matrix of an ellipsoid niche model.}
\usage{
cov_center(data, mve = TRUE, level, vars = NULL)
}
\arguments{
\item{data}{A data.frame or a matrix with the numeric values of the variables
that will be used to model the niche.}

\item{mve}{A logical value. If TRUE a minimum volume ellipsoid will be computed using
the function \code{\link[MASS]{cov.rob}} of the \pkg{MASS} package. If False the covariance matrix of the input data will be used.}

\item{level}{A numerical value specifying the proportion of the data to be
used to compute the ellipsoid.}

\item{vars}{A numeric or a string vector specifying the columns indexes/names of the variables of the input data which will be used to fit the ellipsoid model. If NULL the user will be asked to enter the indexes.
interactively}
}
\value{
Returns a list containing the centroid of the ellipsoid, the covariance matrix based on
the input data, ellipsoid volume, semi-axis length, and axis coordinates.
}
\description{
Function to compute the covariance matrix, the niche centroid, and volume of an ellipsoid model.
ellipsoid model. It uses the values of the niche variables of the occurrence points.
}
\examples{
environ_data <- read.csv(system.file("extdata/csv",
                                     "nichekmeansCluster.csv",
                                      package = "ntbbox"))[,-(1:3)]
ellipsoid_metadata <- cov_center(environ_data,mve = TRUE,
                                 level=0.975,
                                 vars = c("bio5","bio6","bio12"))
# Ellipsoid center
ellipsoid_metadata$centroid
# Shape matrix
ellipsoid_metadata$covariance
# Ellipsoid volume
ellipsoid_metadata$niche_volume
# Plot ellipsoid
rgl::plot3d(rgl::ellipse3d(ellipsoid_metadata$covariance,
                           centre = ellipsoid_metadata$centroid,
                           level = 0.99999),
            alpha=0.4,col="blue")
rgl::points3d(environ_data[,c("bio5","bio6","bio12")])
}
