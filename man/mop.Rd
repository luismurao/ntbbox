% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mop.R
\name{mop}
\alias{mop}
\title{MOP: Extrapolation risk analysis for model transfer}
\usage{
mop(
  M_stack,
  G_stack,
  percent = 10,
  comp_each = 2000,
  parallel = FALSE,
  normalized = TRUE,
  ncores = 4
)
}
\arguments{
\item{M_stack}{a RasterStack of variables representing the calibration area (M area in ENM context).}

\item{G_stack}{a RasterStack of variables representing areas or scenarios to which models will be transferred.}

\item{percent}{(numeric) percent of values sampled from the calibration region to calculate the MOP.}

\item{comp_each}{(numeric) compute distance matrix for a each fixed number of rows (default = 2000).}

\item{parallel}{(logical) if TRUE, calculations will be performed in parallel using the available
cores of the computer. This will demand more RAM and almost full use of the CPU; hence, its use
is more recommended in high-performance computers. Using this option will speed up the analyses.
Default = FALSE}

\item{normalized}{(logical) if TRUE mop output will be normalized to 1.}

\item{ncores}{(numeric) Number of cores to be used if the process is going to be run in parallel}
}
\value{
A mobility-oriented parity RasterLayer where values of 0 represent strict extrapolation,
which means complete dissimilarity of environments between the calibration (M) and projection area (G).
}
\description{
mop calculates a Mobility-Oriented Parity
}
\details{
The MOP is calculated following Owens et al.
(2013; \url{https://doi.org/10.1016/j.ecolmodel.2013.04.011}). This function is a modification
of the MOP function, available at \url{https://github.com/narayanibarve/ENMGadgets}.The value of the comp_each parameter depends on the RAM memory available for the process; the computation can be faster if the user chooses a bigger value for this parameter but you have to be careful on memory use.
}
\examples{
m_stack <- raster::stack(list.files(system.file("extdata/rasters",
                                                package = "ntbbox"),
                                    pattern = "M_layers.tif$",
                                    full.names = TRUE))
g_stack <- raster::stack(list.files(system.file("extdata/rasters",
                                                package = "ntbbox"),
                                    pattern = "G_layers.tif$",
                                    full.names = TRUE))

mop_res <- mop(M_stack = m_stack,
               G_stack = g_stack, percent = 10,
               comp_each=2000)
raster::plot(mop_res)
}
